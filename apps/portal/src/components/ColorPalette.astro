---
import * as styles from "@harnessio/core-design-system/styles-esm";
import { Text } from "@harnessio/ui/components";
interface Color {
  name?: string;
  $value?: string;
  [key: string]: unknown;
}

const shades = Object.keys(styles.colors.blue);
const colors = Object.keys(styles.colors).filter(
  (color) => color !== "pure",
); /** Excluding "pure" colors intentionally */
---

<div
  style={{ "--cols": shades?.length ?? 15 }}
  class={`grid grid-cols-[auto_repeat(var(--cols),1fr)] gap-1 not-content`}
>
  <div></div>
  {
    shades.map((shade) => (
      <Text variant="caption-normal" align="center" color="foreground-2">
        {shade}
      </Text>
    ))
  }
  {
    colors.map((colorName) => {
      const colorGroup = styles.colors[colorName as keyof typeof styles.colors];
      return (
        <>
          <Text
            className="self-center capitalize"
            variant="caption-normal"
            align="right"
            color="foreground-2"
          >
            {colorName}
          </Text>
          {shades.map((shade) => {
            const color = colorGroup[shade as keyof typeof colorGroup];
            const colorValue = (color as Color)?.$value || "";
            return (
              <div
                class="size-12 rounded border border-cn-borders-3"
                style={{ backgroundColor: colorValue }}
                title={`--${(color as Color)?.name}: ${colorValue}`}
              />
            );
          })}
        </>
      );
    })
  }
</div>
