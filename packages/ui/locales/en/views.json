{
  "repos": {
    "createFile": "Create File",
    "uploadFiles": "Upload Files",
    "summary": "Summary",
    "files": "Files",
    "pipelines": "Pipelines",
    "commits": "Commits",
    "tags": "Tags",
    "pullRequests": "Pull requests",
    "branches": {
      "title": "Branches",
      "commitsBehind": "commits behind",
      "commitsAhead": "commits ahead",
      "createBranch": "Create Branch"
    },
    "search": "Search",
    "settings": "Settings",
    "descriptionPlaceholder": "Enter a description",
    "description": "Description",
    "error": "Error:",
    "saving": "Saving…",
    "save": "Save",
    "cancel": "Cancel",
    "webhookSettings": "Webhook Settings",
    "details": "Details",
    "executions": "Executions",
    "generalTab": "General",
    "keysTab": "Keys and tokens",
    "hadRecentPushes": "had recent pushes ",
    "compareAndPullRequest": "Compare & pull request",
    "dismiss": "Dismiss",
    "compareBranchesToSeeChanges": "Compare branches to see your changes.",
    "noNewCommits": "No new commits yet",
    "default": "Default",
    "viewAll": "View all {{type}}",
    "branchesLowercase": "branches",
    "tagsLowercase": "tags",
    "findBranch": "Find a branch",
    "findTag": "Find a tag",
    "allCommits": "All commits",
    "noFile": "No files available",
    "private": "Private",
    "public": "Public",
    "archived": "Archived",
    "archivedBanner": "This repository has been archived on {{date}}. It is now read-only.",
    "archivedBannerNoDate": "This repository has been archived. It is now read-only.",
    "name": "Name",
    "lastCommit": "Last commit message",
    "date": "Date",
    "cloneCredential": "Generate Clone Credential",
    "expiration": "Expiration",
    "token": "Token",
    "cloneCredGenerated": "Your token has been generated. Please make sure to copy and store your token somewhere safe, you won't be able to see it again.",
    "manageAPIToken": "Manage API token",
    "prListFilterOptions": {
      "authorOption": {
        "label": "Author",
        "noResults": "No results found",
        "loading": "Loading Authors...",
        "placeholder": "Search by author"
      },
      "beforeOption": {
        "label": "Created Before"
      },
      "afterOption": {
        "label": "Created After"
      },
      "labels": {
        "label": "Label"
      },
      "review": {
        "label": "Reviews"
      },
      "labelByOption": {
        "label": "Label by"
      }
    },
    "createPullReq": "Create Pull Request",
    "BlockBranchCreation": "Block branch creation",
    "BlockBranchCreationDescription": "Only allow users with bypass permission to create matching branches",
    "BlockBranchDeletion": "Block branch deletion",
    "BlockBranchDeletionDescription": "Only allow users with bypass permission to delete matching branches",
    "BlockBranchUpdate": "Block branch update",
    "BlockBranchUpdateDescription": "Only allow users with bypass permission to update matching branches",
    "BlockForcePush": "Block force push",
    "BlockForcePushDescription": "Only allow users with bypass permission to force push to matching branches",
    "RequirePullRequest": "Require pull request",
    "RequirePullRequestDescription": "Do not allow any changes to matching branches without a pull request",
    "EnableDefaultReviewers": "Enable default reviewers",
    "EnableDefaultReviewersDescription": "Require approval from default reviewer for each pull request",
    "RequireMinimumDefaultReviewerCount": "Require minimum number of default reviewers",
    "RequireMinimumDefaultReviewerCountDescription": "Require a minimum number of default reviewers",
    "RequireCodeReview": "Require a minimum number of reviewers",
    "RequireCodeReviewDescription": "Require approval on pull requests from a minimum number of reviewers",
    "AutoAddCodeOwners": "Add code owners as reviewers",
    "AutoAddCodeOwnersDescription": "Automatically add relevant code owners as reviewers",
    "RequireCodeOwners": "Require review from code owners",
    "RequireCodeOwnersDescription": "Require approval on pull requests from one reviewer for each Code Owner rule",
    "RequestApprovalRule": "Request approval of new changes",
    "RequireLatestCommitDescription": "Require re-approval when there are new changes in the pull request",
    "RequireNoChangeRequest": "Require resolution of change requests",
    "RequireNoChangeRequestDescription": "All change requests on a pull request must be resolved before it can be merged",
    "RequireCommentResolution": "Require comment resolution",
    "RequireCommentResolutionDescription": "All comments on a pull request must be resolved before it can be merged",
    "RequireStatusChecks": "Require status checks to pass",
    "RequireStatusChecksDescription": "Selected status checks must pass before a pull request can be merged",
    "LimitMergeStrategies": "Limit merge strategies",
    "LimitMergeStrategiesDescription": "Limit which merge strategies are available to merge a pull request",
    "MergeStrategy": {
      "Merge": "Allow Merge Commit",
      "Squash": "Allow Squash and Merge",
      "Rebase": "Allow Rebase and Merge",
      "FastForward": "Allow Fast Forward"
    },
    "AutoDeleteBranch": "Auto delete branch on merge",
    "AutoDeleteBranchDescription": "Automatically delete the source branch of a pull request after it is merged",
    "enableRule": "Enable the rule",
    "enableRuleDescription": "By enabling the toggle, the branch rule will be enforced.",
    "enterRuleName": "Enter the rule name here",
    "ruleDescriptionPlaceholder": "Enter the description here",
    "targetPatterns": "Target patterns",
    "createRuleCaption": "Match branches using globstar patterns (e.g.”golden”, “feature-*”, “releases/**”)",
    "rulePatternPlaceholder": "Enter the target patterns",
    "include": "Include",
    "exclude": "Exclude",
    "applyRuleDefaultBranch": "Apply this rule to the default branch",
    "bypassList": "Bypass list",
    "selectUsers": "Select users",
    "editPermissionsCheckboxDescription": "Allow users with edit permission on the repository to bypass",
    "selectDefaultReviewers": "Select default reviewers",
    "rulesTitle": "Rules: select all that apply",
    "selectStatusesPlaceholder": "Select status checks",
    "enterMinDefaultReviewers": "Enter minimum number of default reviewers",
    "enterMinReviewers": "Enter minimum number of reviewers",
    "updateBranchRule": "Update branch rule",
    "createBranchRule": "Create branch rule",
    "updateRuleButton": "Update Rule",
    "createRuleButton": "Create Rule",
    "updatingRuleButton": "Updating Rule...",
    "creatingRuleButton": "Creating Rule...",
    "branch": "Branch",
    "update": "Updated",
    "checkStatus": "Check status",
    "behind": "Behind",
    "ahead": "Ahead",
    "pullRequest": "Pull Request",
    "compare": "Compare",
    "browse": "Browse",
    "deleteBranch": "Delete Branch",
    "createBranchDialog": {
      "validation": {
        "name": "Branch name is required",
        "noSpaces": "Name cannot contain spaces",
        "target": "Base branch is required"
      }
    },
    "createBranchTitle": "Create a branch",
    "createNewRepo": "Create a new repository",
    "repoContains": "A repository contains all project files, including the revision history. Already have a project repository elsewhere?",
    "importRepo": "Import a repository",
    "createNewRepoForm": {
      "name": {
        "label": "Name",
        "placeholder": "Enter repository name"
      },
      "description": {
        "placeholder": "Enter a short description for the repository",
        "label": "Description"
      },
      "gitignore": {
        "label": "Add a .gitignore",
        "caption": "Choose which files not to track from a list of templates.",
        "placeholder": "Select"
      },
      "defaultBranchDialog": {
        "startLabel": "Your repository will be initialized with a",
        "endLabel": "branch."
      }
    },
    "learnMoreAboutReadme": "Learn more about README",
    "fileContent": {
      "noData": {
        "tryAgain": "Try again"
      }
    },
    "repositories": "Repositories",
    "createRepository": "Create Repository",
    "importRepository": "Import Repository",
    "importRepositories": "Import Repositories",
    "importing": "Importing…",
    "updated": "Updated",
    "unarchiveRepo": "Unarchive this repository",
    "archiveRepo": "Archive this repository",
    "unarchiveRepoDescription": "Unarchive this repository to make it read-write.",
    "archiveRepoDescription": "Set this repository to archived and restrict it to read-only access.",
    "unarchiving": "Unarchiving...",
    "archiving": "Archiving...",
    "unarchiveRepoButton": "Unarchive Repository",
    "archiveRepoButton": "Archive Repository",
    "deleteRepo": "Delete this repository",
    "deleteRepoDescription": "This will permanently delete this repository, and everything contained in it.",
    "deleteRepoButton": "Delete Repository",
    "settingsToolTip": "Cannot change settings while loading or updating.",
    "features": "Features",
    "gitLfs": "Git LFS",
    "gitLfsDescription": "Enable Git Large File Storage (LFS) for this repository.",
    "repoNamePlaceholder": "Enter repository name",
    "repoDescriptionPlaceholder": "Enter a description of this repository...",
    "defaultBranch": "Default Branch",
    "visibility": "Visibility",
    "publicDescription": "Anyone with access to Harness can clone this repo.",
    "privateDescription": "You can choose who can see and commit to this repository.",
    "rulesApplied": "rules applied",
    "bypassAllowed": "bypass allowed",
    "bypassNotAllowed": " bypass not allowed",
    "allRules": "All Rules",
    "branchRules": "Branch Rules",
    "tagRules": "Tag Rules",
    "createTagRuleButton": "Create Tag Rule",
    "createBranchRuleButton": "Create Branch Rule",
    "security": "Security",
    "secretScanning": "Secret scanning",
    "secretScanningDescription": "Block commits containing secrets like passwords, API keys and tokens.",
    "vulnerabilityScanning": "Vulnerability scanning",
    "vulnerabilityScanningDescription": "Scan incoming commits for known vulnerabilities.",
    "verifyCommitterIdentity": "Verify committer identity",
    "verifyCommitterIdentityDescription": "Block commits not committed by the user pushing the changes.",
    "generalSettings": "General settings",
    "general": "General",
    "labels": "Labels",
    "rules": "Rules",
    "webhooks": "Webhooks",
    "rulesDescription": "Define standards and automate workflows to ensure better collaboration and control in your repository.",
    "cloneRepo": "Clone Repository",
    "cloneHttps": "HTTPS",
    "cloneSsh": "SSH",
    "gitCloneUrl": "Git clone URL",
    "generateCredential": "Please generate a clone credential if its your first time.",
    "emptyRepoPage": {
      "title": "Repository",
      "subtitle": "Follow the instructions below to get started with your repository.",
      "noData": {
        "title": "This repository is empty.",
        "description": {
          "0": "We recommend every repository include a",
          "1": "README, LICENSE, and .gitignrore."
        },
        "createFile": "Create File"
      },
      "cloneInstructions": {
        "title": "Please generate git credentials if it’s your first time cloning the repository",
        "subTitle": "Git clone URL",
        "http": "HTTP",
        "ssh": "SSH",
        "generateButton": "Generate Clone Credential",
        "manageCredentials": {
          "0": "You can also manage your git credential",
          "1": "here"
        },
        "pushRepository": {
          "0": "You might need to",
          "1": "create an API token",
          "2": "in order to pull from or push into this repository"
        }
      },
      "initialCommit": "Then push some content into it",
      "existingRepo": {
        "title": "Or you can push an existing repository"
      }
    },
    "readme": "README.md",
    "editReadme": "Edit README.md",
    "openPullReq": "Open pull requests",
    "BlockTagCreation": "Block tag creation",
    "BlockTagCreationDescription": "Only allow users with bypass permission to create matching tags",
    "BlockTagDeletion": "Block tag deletion",
    "BlockTagDeletionDescription": "Only allow users with bypass permission to delete matching tags",
    "BlockTagUpdate": "Block tag update",
    "BlockTagUpdateDescription": "Only allow users with bypass permission to update matching tags",
    "updateTagRule": "Update tag rule",
    "createTagRule": "Create tag rule",
    "createTagTitle": "Create a tag",
    "repoTagDescriptionPlaceholder": "Enter tag description here",
    "creatingTagButton": "Creating tag...",
    "createTagButton": "Create tag",
    "createTagDialog": {
      "validation": {
        "name": "Tag name is required",
        "noSpaces": "Name cannot contain spaces",
        "target": "Base branch is required",
        "nameMax": "Name must be no longer than 40 characters",
        "nameRegex": "Name must contain only letters, numbers, and the characters: - _ .",
        "message": "Description is required"
      },
      "name": "Name",
      "target": "Target",
      "message": "Message"
    },
    "viewFiles": "View Files",
    "deleteTag": "Delete tag",
    "tag": "Tag",
    "commit": "Commit",
    "tagger": "Tagger",
    "creationDate": "Creation date",
    "createTag": "Create Tag",
    "enableWebhookToggle": "Enable the webhook",
    "toggleDescription": "We will deliver event details when this hook is triggered",
    "urlPlaceholder": "https://example.com/harness",
    "urlLabel": "Payload URL",
    "secret": "Secret",
    "sslVerification": "SSL Verification",
    "sslVerificationLabel": "Enable SSL Verification",
    "disableSslLabel": "Disable SSL verification",
    "disableSslDescription": "Not recommended for production use",
    "evenTriggerLabel": "Which events would you like to use to trigger this webhook?",
    "evenTriggerAllLabel": "Send me everything",
    "eventTriggerIndividualLabel": "Let me select individual events",
    "editWebhookTitle": "Order Status Update Webhook",
    "createWebhookTitle": "Create a webhook",
    "webhookDetails": "Details",
    "updatingWebhook": "Updating webhook...",
    "creatingWebhook": "Creating webhook...",
    "updateWebhook": "Update webhook",
    "createWebhook": "Create webhook",
    "updateRule": "Update rule",
    "updatingRule": "Updating rule...",
    "createBranchButton": "Create branch",
    "newPullReq": "New pull request",
    "viewRules": "View Rules",
    "newBranch": "New branch",
    "emptyRepo": "This repository is empty.",
    "afterComparingOpenPullRequest": "After comparing changes, you may open a pull request to contribute your changes upstream.",
    "defaultReviewers": "Default reviewers",
    "atLeastMinReviewer": "Select at least {{count}} default reviewer",
    "atLeastMinReviewers": "Select at least {{count}} default reviewers",
    "defaultReviewerWarning": "Pull requests authored by the selected default reviewer will skip the required default reviewer check as there aren't enough default reviewers to satisfy the condition - consider adding additional default reviewers.",
    "defaultReviewersWarning": "Pull requests authored by the selected default reviewers will have the required default reviewer check reduced by one as there aren't enough default reviewers to satisfy the condition - consider adding additional default reviewers.",
    "RequireMinDefaultReviewers": "Require a minimum number of default reviewers",
    "RequireMinDefaultReviewersDescription": "Require approval on pull requests from a minimum number of default reviewers",
    "newRule": "New branch rule",
    "deleteConnector": "Delete Connector",
    "deleteSecret": "Delete Secret",
    "status": "Status",
    "branchCreated": "Branch created",
    "branchCreatedDescription": "Branch {{name}} created successfully",
    "renameBranch": "Rename Branch",
    "add": "Add",
    "users": "Users",
    "clone": "Clone",
    "addFile": "Add file"
  },
  "search": "Search",
  "connectors": {
    "connector": "Connector",
    "viewConnectorDetails": "View Connector Details",
    "status": "Status",
    "viewDocumentation": "View Documentation",
    "activity": "Activity",
    "time": "Time",
    "success": "Success",
    "failure": "Failed",
    "delete": "Delete",
    "configuration": "Configuration",
    "references": "References",
    "activityHistory": "Activity history",
    "createNew": "Create Connector",
    "errorEncountered": "Error Encountered",
    "viewDetails": "View Details",
    "id": "Connector ID",
    "connectivityStatus": "Connectivity status",
    "updated": "Last updated",
    "filterOptions": {
      "statusOption": {
        "success": "Success",
        "failure": "Failure",
        "label": "Status",
        "favorite": "Favorites"
      }
    },
    "created": "Created"
  },
  "noData": {
    "noActivities": "No activities yet",
    "noActivitiesDescription": "There are no activities yet. ",
    "errorApiTitle": "Failed to load {{type}}",
    "errorApiDescription": "An error occurred while loading the data. Please try again and reload the page.",
    "noEntities": "No entities yet",
    "noEntitiesDescription": "There are no entities yet. ",
    "noConnectors": "No connectors yet",
    "noDelegates": "There are no delegates in this project yet.",
    "noResults": "No search results",
    "checkSpelling": "Check your spelling and filter options,",
    "changeSearch": "or search for a different keyword.",
    "clearSearch": "Clear search",
    "labels": "No labels yet",
    "createLabel": "Create a new label to get started.",
    "noResultsDescription": "No {{type}} match your search. Try adjusting your keywords or filters.",
    "members": "No members yet",
    "inviteMembers": "There are no members in this project. Click on the button below to start adding them.",
    "rules": "No rules yet",
    "noRules": "No rules yet",
    "noCommitsYet": "No commits yet",
    "noCommitsYetDescription": "Your commits will appear here once they're made. Start committing to see your changes reflected.",
    "compareChanges": "Compare and review just about anything",
    "compareChangesDescription": "Branches and commit ranges can be reviewed within the same repository.",
    "title": {
      "noOpenPullRequests": "No open pull requests yet",
      "noClosedPullRequests": "No closed pull requests yet",
      "noMergedPullRequests": "No merged pull requests yet"
    },
    "noOpenPullRequests": "There are no open pull requests in this project yet.",
    "noClosedPullRequests": "There are no closed pull requests in this project yet.",
    "noMergedPullRequests": "There are no merged pull requests in this project yet.",
    "button": {
      "createPullRequest": "Create Pull Request"
    },
    "noPullRequestsInRepo": "Start your contribution journey by creating a new pull request.",
    "noPullRequestsInProject": "There are no pull requests in this project yet.",
    "noBranches": "No branches yet",
    "createBranchDescription": "Your branches will appear here once they're created.",
    "startBranchDescription": "Start branching to see your work organized.",
    "noCommitsHistory": "No commits history",
    "noCommitsHistoryDescription": "There isn't any commit history to show here for the selected user, time range, or current page.",
    "clearFilters": "Clear Filters",
    "noRepos": "No repositories yet",
    "noReposProject": "There are no repositories in this project yet.",
    "createOrImportRepos": "Create new or import an existing repository.",
    "noRulesDescription": "There are no rules in this project. Click on the button below to start adding rules.",
    "noTags": "No tags yet",
    "noTagsDescription": "Your tags will appear here once they're created. Start creating tags to see your work organized.",
    "createNewTag": "Create Tag",
    "noWebhookExecution": "No webhook executions yet",
    "noWebhookExecutionsDescription": "Your webhook executions will appear here once they're completed. Trigger your webhook to see the results.",
    "noWebhooks": "No webhooks yet",
    "noWebhooksDescription": "Add or manage webhooks to automate tasks and connect external services to your project.",
    "noSecrets": "No secrets yet",
    "createSecret": "Create new secret.",
    "noUsers": "No Users Found",
    "noUsersDescription": "There are no users in this scope. Click on the button below to start adding them.",
    "createTagRuleButton": "Create Tag Rule",
    "createTagRule": "Create Tag Rule",
    "createBranch": "Create New Branch",
    "createConnector": "Create New Connector.",
    "noConnectorsProject": "There are no connectors in this project yet.",
    "noSecretsProject": "There are no secrets in this project yet.",
    "commit": "Commit",
    "noLabels": "No labels yet",
    "noLabelsDescription": "Use labels to organize, prioritize, and categorize tasks efficiently."
  },
  "notFound": {
    "button": "Reload Page",
    "title": "Something went wrong…",
    "descriptionWithType": "The requested page is not found. You can go back to view all {{type}} and manage your settings.",
    "description": "The requested page is not found."
  },
  "common": {
    "details": "Details",
    "manager": "Manager",
    "lastActivity": "Last Activity",
    "created": "Created"
  },
  "delegates": {
    "delegate": "Delegate",
    "heartbeat": "Heartbeat",
    "selected": "Selected",
    "anyDelegate": "Any Delegate",
    "useAnyDelegate": "Use any available delegate",
    "delegateTags": "Delegate with tags",
    "useDelegateTags": "Use delegate with following tags",
    "noDelegatesInstalled": "Haven't installed a delegate yet?",
    "installDelegate": "Install delegate",
    "enterTags": "Enter tags",
    "testDelegate": "Test Delegate connectivity",
    "delegateMatches": "Matches: ",
    "connectDelegates": "Connect "
  },
  "createProject": {
    "backButton": "Back",
    "validation": {
      "nameNoEmpty": "The field can’t be blank",
      "nameMinLength": "The project name should be at least 4 characters"
    },
    "title": "Create your new project",
    "description": "Organize your repositories, pipelines and more.",
    "form": {
      "name": "Project name",
      "namePlaceholder": "Enter your project name",
      "description": "Description",
      "descriptionPlaceholder": "Enter a description (optional)"
    },
    "create": {
      "projectCreation": "Creating project...",
      "createProject": "Create project"
    },
    "or": "or",
    "importProject": "Import project",
    "logout": {
      "question": "Want to use a different account?",
      "link": "Log out"
    }
  },
  "execution": {
    "summary": "Summary",
    "logs": "Logs",
    "graph": "Graph",
    "inputs": "Inputs",
    "opa": "Policy evaluations",
    "artifacts": "Artifacts",
    "tests": "Tests",
    "sto": "Security tests",
    "secrets": "Secrets"
  },
  "labelData": {
    "form": {
      "colorValuePlaceholder": "Enter value name",
      "colorLabelPlaceholder": "Enter label name",
      "editTitle": "Label details",
      "createTitle": "Create a label",
      "labelName": "Label name",
      "valueName": "Label value",
      "addValue": "Add a value",
      "allowUsersCheckboxLabel": "Allow users to add values",
      "previewLabel": "Label preview",
      "previewDynamicValue": "*can be added by users*"
    },
    "table": {
      "name": "Name",
      "created": "Created in",
      "description": "Description"
    },
    "edit": "Edit Label",
    "delete": "Delete Label",
    "title": "Labels",
    "showParentLabels": "Show labels from parent scopes",
    "createLabel": "Create Label",
    "newLabel": "Create Label",
    "create": "Create Labels"
  },
  "projectSettings": {
    "newLabels": "Create Label",
    "general": {
      "mainTitle": "General settings",
      "projectNamePlaceholder": "Enter project name",
      "projectNameLabel": "Project name",
      "projectDescriptionPlaceholder": "Enter description",
      "projectDescriptionLabel": "Description",
      "formSubmitButton": {
        "savingState": "Saving...",
        "defaultState": "Save Changes",
        "savedState": "Saved"
      },
      "formCancelButton": "Cancel",
      "deleteProjectTitle": "Delete project",
      "deleteProjectDescription": "This will permanently delete this project, and everything contained in it. All repositories in it will also be deleted.",
      "deleteProjectButton": "Delete Project"
    },
    "newMember": "New member",
    "member": "Member",
    "role": "Role",
    "addMember": "Add member to this project",
    "membersTable": {
      "user": "User",
      "email": "Email",
      "role": "Role"
    },
    "removeMember": "Remove member",
    "inviteNewMember": "Invite new member",
    "members": "Members",
    "rules": "Rules",
    "addRule": "Add new rule",
    "tabs": {
      "general": "General",
      "members": "Members",
      "labels": "Labels",
      "rules": "Rules"
    },
    "newBranchRule": "New branch rule"
  },
  "landingPage": {
    "selectProject": "Select a project to get started",
    "description": "Projects contain your repositories and pipelines. To start using Harness, select a project or create a new one.",
    "projectSelector": "Select Project",
    "noProjects": "No projects available",
    "createProject": "Create Project"
  },
  "pullRequests": {
    "conversation": "Conversation",
    "commits": "Commits",
    "changes": "Changes",
    "noCommitsYet": "No commits yet",
    "noCommitDataDescription": "There are no commits yet.",
    "compareChangesCreateTitle": "Create Pull Request",
    "compareChangesCreateDescription": "Open pull request that is ready for review.",
    "compareChangesDraftTitle": "Create Draft Pull request",
    "compareChangesDraftDescription": "Does not request code reviews and cannot be merged.",
    "compareChangesCreatedButton": "Pull Request Created",
    "compareChangesFormTitleLabel": "Add a title",
    "compareChangesFormTitlePlaceholder": "Enter pull request title",
    "compareChangesFormDescriptionHeading": "Add a description",
    "compareChangesFormDescriptionPlaceholder": "Add Pull Request description here.",
    "validation": {
      "titleMin": "Title is required",
      "titleMax": "Title must be no longer than 256 characters",
      "branchSameAsSource": "Target branch cannot be the same as source branch"
    },
    "compareChanges": "Comparing changes",
    "compareChangesDescription": "Choose two branches to see what’s changed or to start a new pull request.",
    "compareChangesAbleToMerge": "Able to merge.",
    "compareChangesAbleToMergeDescription": "These branches can be automatically merged.",
    "compareChangesApiError": "Head branch doesn’t contain any new commits.",
    "compareChangesCantMerge": "Can’t be merged.",
    "compareChangesCantMergeDescription": "You can still create the pull request.",
    "compareChangesDiscussChanges": "Discuss and review the changes in this comparison with others.",
    "compareChangesDiscussChangesLink": "Learn about pull requests.",
    "compareChangesChooseDifferent": "Choose different branches above to discuss and review changes.",
    "compareChangesViewPRLink": "View pull request",
    "compareChangesTabOverview": "Overview",
    "compareChangesTabCommits": "Commits",
    "compareChangesTabChanges": "Changes",
    "findOrAddNewValue": "Find or add a new value",
    "addNewValue": "Add a new value",
    "searchValue": "Search value",
    "addValue": "Add new value",
    "labelNotFound": "Label not found",
    "labels": "Labels",
    "searchLabels": "Search",
    "noLabels": "No labels found",
    "editLabels": "Edit labels",
    "changedSinceLastView": "Changed since last viewed",
    "markViewed": "Viewed",
    "deletedComment": "This comment was deleted.",
    "reviewers": "Reviewers",
    "noUsers": "No users found.",
    "approve": "Approve",
    "approved": "Approved",
    "changereq": "Changes Requested",
    "split": "Split",
    "unified": "Unified",
    "deleted": "Deleted",
    "searchUsers": "Search users",
    "compareChangesFormDescriptionLabel": "Description",
    "selectUsersUGAndServiceAccounts": "Select users, user groups and service accounts",
    "viewed": "Viewed",
    "compareChangesForkLink": "compare across forks",
    "compareChangesOr": "or",
    "compareChangesDiffLink": "learn more about diff comparisons",
    "compareChangesFormTitle": "Add a title",
    "compareChangesFormDescription": "Add a description",
    "compareChangesCreateButton": "Create Pull Request",
    "compareChangesCreateButtonLoading": "Creating Pull Request...",
    "compareChangesDraftButton": "Draft Pull Request",
    "compareChangesDraftButtonLoading": "Drafting Pull Request...",
    "replyHere": "Reply here",
    "showDiff": "Show Diff",
    "deletedFileDiff": "This file was deleted.",
    "largeDiff": "Large diffs are not rendered by default.",
    "fileNoChanges": "File without changes.",
    "binaryNotShown": "Binary file not shown."
  },
  "profileSettings": {
    "newSshKey": "New SSH key",
    "enterNamePlaceholder": "Enter the name",
    "publicKey": "Public key",
    "cancel": "Cancel",
    "save": "Save",
    "name": "Name",
    "added": "Added",
    "lastUsedDate": "Last used date",
    "deleteSshKey": "Delete SSH key",
    "noDataKeysDescription": "There are no SSH keys associated with this account.",
    "createToken": "Create a token",
    "enterTokenPlaceholder": "Enter token name",
    "expiration": "Expiration",
    "token": "Token",
    "tokenSuccessDescription": "Your token has been generated. Please make sure to copy and store your token somewhere safe, you won’t beable to see it again.",
    "select": "Select",
    "tokenExpiryNone": "Token will never expire",
    "tokenExpiryDate": " Token will expire on",
    "gotItButton": "Got It",
    "generateTokenButton": "Generate Token",
    "generatingTokenButton": "Generating Token...",
    "tokenTableHeader": "Token",
    "statusTableHeader": "Status",
    "expirationDateTableHeader": "Expiration date",
    "createdTableHeader": "Created",
    "active": "Active",
    "noExpiration": "No Expiration",
    "deleteToken": "Delete token",
    "noTokenDescription": "There are no personal access tokens associated with this account.",
    "validation": {
      "nameMin": "Please provide your name",
      "nameMax": "Name must be no longer than 256 characters",
      "usernameMin": "Please provide a username",
      "emailInvalid": "Please provide a valid email address",
      "emailMax": "Email must be no longer than 250 characters",
      "passwordMin": "New password must be at least 6 characters",
      "passwordMax": "New password must be no longer than 128 characters",
      "confirmPasswordMin": "Please confirm your new password",
      "passwordsDoNotMatch": "Passwords do not match"
    },
    "accountSettings": "Account settings",
    "personalInfo": "Personal information",
    "enterUsernamePlaceholder": "Enter your username",
    "username": "Username",
    "enterUsernameCaption": "This username will be shown across the platform.",
    "accountEmail": "Account email",
    "updatingProfileButton": "Updating...",
    "updateProfileButton": "Update Profile",
    "updatedButton": "Updated",
    "passwordSettingsTitle": "Password settings",
    "passwordSettingsDesc": "Minimum of 6 characters long containing at least one number and a mixture of uppercase and lowercase letters.",
    "enterPasswordPlaceholder": "Enter a new password",
    "newPassword": "New password",
    "confirmPasswordPlaceholder": "Confirm your new password",
    "confirmPassword": "Confirm password",
    "updating": "Updating...",
    "updatePassword": "Update password",
    "keysAndTokens": "Keys and Tokens",
    "personalAccessToken": "Personal access token",
    "addTokenDescription": "Personal access tokens allow you to authenticate with the API.",
    "addToken": "Add new token",
    "sshKeys": "My SSH keys",
    "addSshKeyDescription": "SSH keys allow you to establish a secure connection to your code repository.",
    "addSshKey": "Add new SSH key",
    "saving": "Saving...",
    "generalTab": "General",
    "keysTab": "Keys and Tokens"
  },
  "forms": {
    "selectMember": "Select member",
    "selectRole": "Select role",
    "enterBranchName": "Enter branch name",
    "basedOn": "Based on",
    "tagName": "Name",
    "enterTagName": "Enter a tag name here",
    "createBranchError": "Branch name is required",
    "select": "Select",
    "baseBranch": "Base branch",
    "selectBranchError": "Base branch is required",
    "baseTag": "Based on",
    "selectMemberError": "Member is required",
    "selectRoleError": "Role is required"
  },
  "roles": {
    "owner": "Owner",
    "ownerDesc": "Admin-level access to all resources.",
    "contributor": "Contributor",
    "contributorDesc": "Can view, comment, and edit resources.",
    "executor": "Executor",
    "executorDesc": "Can view and leave comments.",
    "reader": "Reader",
    "readerDesc": "Can view but cannot make changes or leave comments."
  },
  "rules": {
    "showParentRules": "Show rules from parent scopes",
    "edit": "Edit Rule",
    "delete": "Delete Rule",
    "exclude": "Exclude",
    "include": "Include"
  },
  "scope": {
    "orgAndProject": "Organizations and projects",
    "orgOnly": "Organizations only",
    "all": "Account, organizations and projects",
    "accountOnly": "Account only",
    "label": "Scope"
  },
  "repo": {
    "components": {
      "commitDetailsDiffShowing": "Showing",
      "commitDetailsDiffChangedFiles": "changed files",
      "commitDetailsDiffWith": "with",
      "commitDetailsDiffAdditionsAnd": "additions and",
      "commitDetailsDiffDeletions": "deletions"
    }
  },
  "commits": {
    "commitDetailsTitle": "Commit",
    "browseFiles": "Browse Files",
    "commitDetailsAuthored": "authored",
    "createCommit": "Create commit",
    "createNewCommit": "Create commit",
    "commitDetailsDiffShowing": "Showing",
    "commitDetailsDiffChangedFiles": "changed files",
    "commitDetailsDiffWith": "with",
    "commitDetailsDiffAdditionsAnd": "additions and",
    "commitDetailsDiffDeletions": "deletions",
    "verified": "Verified"
  },
  "createTagDialog": {
    "validation": {
      "message": "Description is required"
    }
  },
  "webhookData": {
    "branchCreated": "Branch created",
    "branchUpdated": "Branch updated",
    "branchDeleted": "Branch deleted",
    "tagCreated": "Tag created",
    "tagUpdated": "Tag updated",
    "tagDeleted": "Tag deleted",
    "prCreated": "PR created",
    "prUpdated": "PR updated",
    "prReopened": "PR reopened",
    "prClosed": "PR closed",
    "prMerged": "PR merged",
    "prBranchUpdated": "PR branch updated",
    "prCommentCreated": "PR comment created",
    "prCommentStatusUpdated": "PR comment status updated",
    "prCommentUpdated": "PR comment updated",
    "prReviewSubmitted": "PR review submitted",
    "prLabelAssigned": "PR label assigned",
    "create": "Create Webhook",
    "edit": "Edit Webhook",
    "delete": "Delete Webhook"
  },
  "secrets": {
    "createNew": "Create Secret",
    "delete": "Delete Secret",
    "secretsTitle": "Secrets"
  },
  "secret": {
    "title": "Secret"
  },
  "userManagement": {
    "createUser": {
      "title": "Add a new user",
      "enterDisplayName": "Enter display name",
      "inviting": "Inviting...",
      "inviteNewUser": "Invite new user",
      "validation": {
        "userIdRequired": "Please provide a user ID",
        "invalidEmail": "Please enter a valid email address",
        "displayNameRequired": "Please provide a display name",
        "emailInvalid": "Please enter a valid email"
      }
    },
    "userId": "User ID",
    "userIdHint": "User ID cannot be changed once created",
    "enterName": "Enter name",
    "enterEmail": "Enter email address",
    "email": "Email",
    "displayName": "Display name",
    "cancel": "Cancel",
    "deleteUser": {
      "title": "Are you sure you want to delete {{name}}?",
      "message": "This will permanently delete the user <strong>\"{{name}}\"</strong> from the system.",
      "pending": "Deleting user...",
      "confirm": "Yes, delete user"
    },
    "editUser": {
      "title": "Update user",
      "message": "Update information for <strong>{{name}}</strong> and confirm changes.",
      "email": "Email",
      "pending": "Saving...",
      "save": "Save",
      "validation": {
        "invalidEmail": "Please enter a valid email address",
        "displayNameRequired": "Please provide a display name"
      }
    },
    "removeAdmin": {
      "title": "Are you sure you want to remove {{name}} as an admin?",
      "message": "This will remove the admin tag for <strong>\"{{name}}\"</strong>.",
      "pending": "Removing admin...",
      "confirm": "Yes, remove admin"
    },
    "grantAdmin": {
      "title": "Are you sure you want to grant {{name}} admin privileges?",
      "message": "This will grant admin privileges to <strong>\"{{name}}\"</strong>.",
      "pending": "Granting admin...",
      "confirm": "Yes, grant admin"
    },
    "resetPassword": {
      "title": "Are you sure you want to reset password for {{name}}?",
      "passwordGeneratedMessage": "Your password has been generated. Please make sure to copy and store your password somewhere safe, you won't be able to see it again.",
      "message": "A new password will be generated to assist <strong>{{name}}</strong> in resetting their current password.",
      "pending": "Resetting password...",
      "confirm": "Confirm"
    },
    "close": "Close",
    "newUserButton": "Create User",
    "searchPlaceholder": "Search",
    "usersHeader": "Users",
    "tabs": {
      "active": "Active users",
      "inactive": "Pending users"
    },
    "usersList": {
      "user": "User",
      "email": "Email",
      "roleBinding": "Role binding"
    },
    "roles": {
      "admin": "Admin",
      "user": "User"
    },
    "actions": {
      "removeAdmin": "Remove admin",
      "setAsAdmin": "Set as admin",
      "resetPassword": "Reset password",
      "editUser": "Edit user",
      "deleteUser": "Delete user"
    }
  },
  "code": "Code"
}
